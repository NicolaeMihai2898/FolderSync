importos,shutil
importlogging.handlers
importlogging
importtime

source_folder="D:/FolderSync/original"
destination_folder="D:/FolderSync/replica"

handler=logging.handlers.WatchedFileHandler("D:/FolderSync/history.log")

#defineformatofthelog,inthiscasejustadate&timewiththelogmessage
formatter=logging.Formatter("%(asctime)s;%(message)s")

#attachnewformatter
handler.setFormatter(formatter)

#getloggerinstanceandupdateitssettings
logger=logging.getLogger()
logger.setLevel("INFO")
logger.addHandler(handler)

#Creating+Deletingfolders
defcopy_folder(source_folder,destination_folder):
shutil.copytree(source_folder,destination_folder)
logger.info(f"Foldercopied:{source_folder}")

defremove_folder(folder_path):
shutil.rmtree(folder_path)
logger.info(f"Folderremoved:{folder_path}")
whileTrue:
files_to_be_deleted=os.listdir(destination_folder)
forfile_nameinfiles_to_be_deleted:
source=source_folder+"/"+file_name
destination=destination_folder+"/"+file_name
#deletedfiles
ifos.path.exists(source)==False:
ifos.path.exists(destination):
print('deleted',file_name)
logging.info(f"Filedeleted:{file_name}")
try:
os.remove(destination)
except:
os.rmdir(destination)

files=os.listdir(source_folder)
forfile_nameinfiles:
#constructfullfilepath
source=source_folder+"/"+file_name
destination=destination_folder+"/"+file_name
#createdfiles
ifos.path.exists(source):
ifos.path.exists(destination)==False:
logging.info(f"Filecreated:{file_name}")
print('created',file_name)
#copyfiles
try:
copy_folder(source,destination)
except:
shutil.copy(source,destination)
logging.info(f"Filecopied:{file_name}")
print('copied',file_name)

#removefolder
iffile_name=="replica":
remove_folder(destination_folder)
logger.info(f"Folderremoved:{destination_folder}")
time.sleep(5)
